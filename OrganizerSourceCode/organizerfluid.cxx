// generated by Fast Light User Interface Designer (fluid) version 1.0305

#include "organizerfluid.h"

Fl_Menu_Item mainGUI::menu_menuBar[] = {
 {"File", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Options", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Help", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};
Fl_Menu_Item* mainGUI::menuFile = mainGUI::menu_menuBar + 0;
Fl_Menu_Item* mainGUI::menuOptions = mainGUI::menu_menuBar + 1;
Fl_Menu_Item* mainGUI::menuHelp = mainGUI::menu_menuBar + 2;

Fl_Double_Window* mainGUI::createWindow() {
  { mainWindow = new Fl_Double_Window(800, 600, "Organizer");
    mainWindow->user_data((void*)(this));
    { menuBar = new Fl_Menu_Bar(0, 0, 800, 30);
      menuBar->menu(menu_menuBar);
    } // Fl_Menu_Bar* menuBar
    { toolbar = new Fl_Group(0, 30, 800, 70);
      toolbar->labeltype(FL_NO_LABEL);
      { todoBtn = new Fl_Button(0, 30, 70, 70, "Todo");
        todoBtn->callback((Fl_Callback*)todoShow_cb);
      } // Fl_Button* todoBtn
      { lastSinceBtn = new Fl_Button(70, 30, 70, 70, "LastSince");
        lastSinceBtn->callback((Fl_Callback*)lastSinceShow_cb);
      } // Fl_Button* lastSinceBtn
      { batteryBtn = new Fl_Button(140, 30, 70, 70, "Battery");
        batteryBtn->callback((Fl_Callback*)batteryShow_cb);
      } // Fl_Button* batteryBtn
      { mysterySurpriseBtn = new Fl_Button(210, 30, 70, 70, "mystery surprise");
        mysterySurpriseBtn->align(Fl_Align(FL_ALIGN_WRAP));
      } // Fl_Button* mysterySurpriseBtn
      { fanSpeedBtn = new Fl_Button(280, 30, 70, 70, "fan speed");
        fanSpeedBtn->callback((Fl_Callback*)fanSpeedShow_cb);
        fanSpeedBtn->align(Fl_Align(FL_ALIGN_WRAP));
      } // Fl_Button* fanSpeedBtn
      toolbar->end();
    } // Fl_Group* toolbar
    { progressBar = new Fl_Progress(0, 100, 800, 30);
      progressBar->box(FL_GLEAM_UP_BOX);
      progressBar->selection_color((Fl_Color)79);
      progressBar->labeltype(FL_NO_LABEL);
    } // Fl_Progress* progressBar
    { consoleWindow = new Fl_Group(0, 130, 800, 490);
      consoleWindow->box(FL_UP_BOX);
      consoleWindow->color(FL_DARK1);
      consoleWindow->selection_color((Fl_Color)51);
      consoleWindow->labeltype(FL_NO_LABEL);
      { todoBox = new Fl_Group(0, 130, 800, 470, "to do later");
        todoBox->box(FL_UP_BOX);
        todoBox->color((Fl_Color)78);
        todoBox->align(Fl_Align(FL_ALIGN_CENTER));
        todoBox->hide();
        todoBox->end();
      } // Fl_Group* todoBox
      { LastSinceBox = new Fl_Group(0, 130, 800, 490);
        LastSinceBox->color((Fl_Color)83);
        LastSinceBox->labeltype(FL_NO_LABEL);
        LastSinceBox->hide();
        { tagGroup = new Fl_Group(0, 130, 150, 470);
          tagGroup->box(FL_GTK_UP_FRAME);
          tagGroup->color(FL_GRAY0);
          tagGroup->labeltype(FL_NO_LABEL);
          { gearBox = new Fl_Group(0, 130, 150, 90);
            gearBox->box(FL_DOWN_FRAME);
            gearBox->color(FL_GRAY0);
            gearBox->labeltype(FL_NO_LABEL);
            { lsGearBoxBtn = new Fl_Button(35, 140, 70, 70, "gear button");
              lsGearBoxBtn->callback((Fl_Callback*)lsGearBoxBtn_cb);
            } // Fl_Button* lsGearBoxBtn
            gearBox->end();
          } // Fl_Group* gearBox
          { tagCheckBoxGroup = new Fl_Group(0, 220, 150, 380);
            tagCheckBoxGroup->labeltype(FL_NO_LABEL);
            tagCheckBoxGroup->hide();
            tagCheckBoxGroup->end();
          } // Fl_Group* tagCheckBoxGroup
          tagGroup->end();
        } // Fl_Group* tagGroup
        { outputView = new Fl_Group(150, 130, 650, 470);
          outputView->box(FL_GTK_UP_FRAME);
          outputView->color(FL_FOREGROUND_COLOR);
          outputView->labeltype(FL_NO_LABEL);
          outputView->hide();
          { centerView = new Fl_Group(150, 130, 450, 470);
            centerView->labeltype(FL_NO_LABEL);
            { refreshBtnGroup = new Fl_Group(150, 130, 450, 90);
              refreshBtnGroup->labeltype(FL_NO_LABEL);
              { lsUpdateBtn = new Fl_Button(220, 150, 300, 45, "update");
                lsUpdateBtn->labelsize(30);
                lsUpdateBtn->callback((Fl_Callback*)lsUpdateBtn_cb);
              } // Fl_Button* lsUpdateBtn
              refreshBtnGroup->end();
            } // Fl_Group* refreshBtnGroup
            { longestLastSinceEntry = new Fl_Group(150, 265, 450, 185, "OVERDUE");
              longestLastSinceEntry->box(FL_UP_BOX);
              longestLastSinceEntry->color(FL_FOREGROUND_COLOR);
              longestLastSinceEntry->labelsize(30);
              longestLastSinceEntry->labelcolor((Fl_Color)1);
              longestLastSinceEntry->align(Fl_Align(512));
              longestLastSinceEntry->end();
            } // Fl_Group* longestLastSinceEntry
            centerView->end();
          } // Fl_Group* centerView
          { allLastSinceEntriesGroup = new Fl_Group(600, 130, 200, 470);
            allLastSinceEntriesGroup->box(FL_GTK_UP_FRAME);
            allLastSinceEntriesGroup->color(FL_FOREGROUND_COLOR);
            allLastSinceEntriesGroup->end();
          } // Fl_Group* allLastSinceEntriesGroup
          outputView->end();
        } // Fl_Group* outputView
        { editView = new Fl_Group(150, 130, 650, 470);
          editView->box(FL_GTK_DOWN_FRAME);
          editView->color((Fl_Color)24);
          editView->labeltype(FL_NO_LABEL);
          editView->align(Fl_Align(FL_ALIGN_CENTER));
          editView->hide();
          { lsAddEntryGroup = new Fl_Group(150, 130, 650, 200);
            lsAddEntryGroup->labeltype(FL_NO_LABEL);
            { lsEntryTextInput = new Fl_Input(200, 150, 400, 90, "input:");
              lsEntryTextInput->labelsize(15);
              lsEntryTextInput->labelcolor(FL_GRAY0);
              lsEntryTextInput->textsize(16);
              lsEntryTextInput->align(Fl_Align(132));
            } // Fl_Input* lsEntryTextInput
            { lsEntryTextInputBtn = new Fl_Button(620, 150, 65, 25, "enter");
              lsEntryTextInputBtn->box(FL_GTK_UP_FRAME);
              lsEntryTextInputBtn->down_box(FL_DOWN_BOX);
              lsEntryTextInputBtn->color(FL_FOREGROUND_COLOR);
              lsEntryTextInputBtn->selection_color((Fl_Color)2);
              lsEntryTextInputBtn->callback((Fl_Callback*)lsEntryTextInputBtn_cb);
            } // Fl_Button* lsEntryTextInputBtn
            lsAddEntryGroup->end();
          } // Fl_Group* lsAddEntryGroup
          editView->end();
        } // Fl_Group* editView
        { lastSinceFileReadingErrorGroup = new Fl_Group(150, 130, 650, 470, "FILE READING ERROR");
          lastSinceFileReadingErrorGroup->box(FL_UP_BOX);
          lastSinceFileReadingErrorGroup->color((Fl_Color)129);
          lastSinceFileReadingErrorGroup->labelsize(50);
          lastSinceFileReadingErrorGroup->align(Fl_Align(FL_ALIGN_CENTER));
          lastSinceFileReadingErrorGroup->hide();
          lastSinceFileReadingErrorGroup->end();
        } // Fl_Group* lastSinceFileReadingErrorGroup
        LastSinceBox->end();
      } // Fl_Group* LastSinceBox
      { batteryBox = new Fl_Group(0, 130, 800, 470);
        batteryBox->color((Fl_Color)83);
        batteryBox->labeltype(FL_NO_LABEL);
        batteryBox->hide();
        batteryBox->end();
      } // Fl_Group* batteryBox
      { fanSpeedBox = new Fl_Group(0, 130, 800, 470);
        fanSpeedBox->labeltype(FL_NO_LABEL);
        fanSpeedBox->hide();
        fanSpeedBox->end();
      } // Fl_Group* fanSpeedBox
      consoleWindow->end();
    } // Fl_Group* consoleWindow
    mainWindow->end();
  } // Fl_Double_Window* mainWindow
  return mainWindow;
}
